// COLORS

$level-colors: (
   0: #7081a3,
   1: #5c8f8f,
   2: #6e905d,
   3: #838754,
   4: #957b62,
   5: #a37078,
   6: #9270a3,
);

$level-change: 12%; // how much each lighter or darker the parent and child levels are compared to the current level
$packed-change: 9%; // how much each lighter or darker the parent and child levels are compared to the current level
// 10-15% work well

$parent-colors: (
   0: lighten(map-get($level-colors, 0), $level-change),
   1: lighten(map-get($level-colors, 1), $level-change),
   2: lighten(map-get($level-colors, 2), $level-change),
   3: lighten(map-get($level-colors, 3), $level-change),
   4: lighten(map-get($level-colors, 4), $level-change),
   5: lighten(map-get($level-colors, 5), $level-change),
   6: lighten(map-get($level-colors, 6), $level-change),
);

$child-colors: (
   0: darken(map-get($level-colors, 0), $level-change),
   1: darken(map-get($level-colors, 1), $level-change),
   2: darken(map-get($level-colors, 2), $level-change),
   3: darken(map-get($level-colors, 3), $level-change),
   4: darken(map-get($level-colors, 4), $level-change),
   5: darken(map-get($level-colors, 5), $level-change),
   6: darken(map-get($level-colors, 6), $level-change),
);

$packed-colors: (
   0: transparentize(map-get($child-colors, 0), 0.5),
   1: transparentize(map-get($child-colors, 1), 0.5),
   2: transparentize(map-get($child-colors, 2), 0.5),
   3: transparentize(map-get($child-colors, 3), 0.5),
   4: transparentize(map-get($child-colors, 4), 0.5),
   5: transparentize(map-get($child-colors, 5), 0.5),
   6: transparentize(map-get($child-colors, 6), 0.5),
);

$header-bg-color: darken(map-get($level-colors, 0), 40%);
$header-text-color: map-get($level-colors, 4);

$darker-stuff: rgba(
   0,
   0,
   0,
   0.7
); // make this a darker version of whatever color is behind it
$lighter-stuff: rgba(
   255,
   255,
   255,
   0.7
); // this this a lighter version of whatever color is behind it

// colored text for light mode and dark mode
$level-text-colors: (
   0: #4969a9,
   1: #238383,
   2: #448424,
   3: #6b7313,
   4: #8d5c2d,
   5: #a74757,
   6: #8848a8,
);

// dark mode background colors
$this-bg-dark: hsl(0, 0, 16);
$parent-bg-dark: hsl(0, 0, 20);
$child-bg-dark: hsl(0, 0, 12);
$child-bg-dark-packed: hsla(0, 0, 12, 0.6);

// light mode background colors
$this-bg-light: hsl(0, 0, 80);
$parent-bg-light: lighten($this-bg-light, 12%);
$child-bg-light: darken($this-bg-light, 12%);
$child-bg-light-packed: hsla(0, 0, 72, 0.6);

// FONTS

// @import url("https://fonts.googleapis.com/css2?family=Fira+Sans:wght@500&family=Noto+Sans:wght@400;700&family=Noto+Serif&display=swap"); // White Bear
@import url("https://fonts.googleapis.com/css2?family=Teko:wght@300;400;500;600;700&display=swap"); // Loadout
$font-family-sans-serif: "Teko", sans-serif; // Loadout

// second font for body and user typing
// @import url("https://fonts.googleapis.com/css2?family=Fira+Sans&display=swap");
// $font-family-body: "Fira Sans", sans-serif;
@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");
$font-family-body: "Roboto Condensed", sans-serif;

// $font-family-sans-serif: "Noto Sans", sans-serif, "Apple Color Emoji"; // White Bear
// $font-family-serif: "Noto Serif", serif;
// $font-family-brand: "Fira Sans";
// $font-family-base: $font-family-sans-serif; // White Bear
$font-family-base: $font-family-sans-serif; // Loadout

// BREAKPOINTS

$item-card-min-width: 263px; // minimum width of the item cards before the layout changes
// 263px is how wide a 2-column card would be on iPhone 5/SE landscape with the margins
$item-card-max-width: 350px; // maximum width of the item cards before the layout changes
$item-card-spacing: 12px; // space between the item cards

$grid-breakpoints: (
   xs: 0,
   sm: 568px,
   // changed sm from 576px because iPhone 5/SE landscape is 568 px and I want it to go to sm
      md: 768px,
   lg: 992px,
   xl: 1200px,
);

// common rules

// shadows
$item-card-shadow: 0 3px 3px rgba(0, 0, 0, 0.23);
$button-shadow: 0 3px 3px rgba(0, 0, 0, 0.23);
$inner-shadow: inset 0 3px 3px rgba(0, 0, 0, 0.23);
$pack-icon-shadow: 0 0 2px rgba(0, 0, 0, 1);

// spacing
$space-between-button-rows: 9px;
$space-between-sections: 16px;
$card-section-padding: 9px;

$outline-style: 1px solid rgba(0, 0, 0, 0.5);

// font colors
$light-text-color: rgba(255, 255, 255, 0.6);
$light-text-color-dim: rgba(255, 255, 255, 0.25);
$dark-text-color: rgba(0, 0, 0, 0.7);
$dark-text-color-dim: rgba(0, 0, 0, 0.3);

// UI THEMES

.add-color {
   fill: hsl(120, 75, 40);
}

.delete-color {
   fill: hsl(0, 67, 50);
}

.move-color {
   fill: hsl(240, 75, 55);
}

// colors mode
.ui-theme-0 {
   .level-text-color-this {
      color: $dark-text-color;
   }
   .level-text-color-parent {
      color: $light-text-color;
   }
   .level-text-color-child {
      color: $light-text-color;
   }

   color: $dark-text-color;

   .primary-action-button {
      background-color: #404040;
      color: white;
      border: 2px solid #404040;
   }
   .primary-action-button:hover:not(.disabled) {
      color: darken(white, 10);
      background-color: darken(#404040, 10);
      border: 2px solid darken(#404040, 10);
   }
   .primary-action-button:active:not(.disabled) {
      color: darken(white, 20);
      background-color: darken(#404040, 20);
      border: 2px solid darken(#404040, 20);
   }

   .secondary-action-button {
      // color: white;
      border: 2px solid #404040;
   }
   .secondary-action-button:hover:not(.disabled) {
      // color: darken(white, 10);
      background-color: rgba(0, 0, 0, 0.125);
      border: 2px solid darken(#404040, 10);
   }
   .secondary-action-button:active:not(.disabled) {
      // color: darken(white, 20);
      background-color: rgba(0, 0, 0, 0.25);
      border: 2px solid darken(#404040, 20);
   }

   .icon-parent {
      // width: 1em; //$iconWidth;
      align-self: center;
      .primary {
         fill: $light-text-color;
      }
      .secondary {
         fill: $light-text-color-dim;
      }
   }
   .theme-icon-color {
      // width: 1em; //$iconWidth;
      align-self: center;
      .primary {
         fill: $dark-text-color;
      }
      .secondary {
         fill: $dark-text-color-dim;
      }
   }

   .edit-name {
      background-color: rgba(255, 255, 255, 0.6);
      color: black;
   }

   .this-bg-level-0 {
      background-color: map-get($level-colors, 0);
   }
   .this-bg-level-1 {
      background-color: map-get($level-colors, 1);
   }
   .this-bg-level-2 {
      background-color: map-get($level-colors, 2);
   }
   .this-bg-level-3 {
      background-color: map-get($level-colors, 3);
   }
   .this-bg-level-4 {
      background-color: map-get($level-colors, 4);
   }
   .this-bg-level-5 {
      background-color: map-get($level-colors, 5);
   }
   .this-bg-level-6 {
      background-color: map-get($level-colors, 6);
   }

   .parent-bg-level-0 {
      background-color: map-get($parent-colors, 0);
   }
   .parent-bg-level-1 {
      background-color: map-get($parent-colors, 1);
   }
   .parent-bg-level-2 {
      background-color: map-get($parent-colors, 2);
   }
   .parent-bg-level-3 {
      background-color: map-get($parent-colors, 3);
   }
   .parent-bg-level-4 {
      background-color: map-get($parent-colors, 4);
   }
   .parent-bg-level-5 {
      background-color: map-get($parent-colors, 5);
   }
   .parent-bg-level-6 {
      background-color: map-get($parent-colors, 6);
   }

   .child-bg-level-0 {
      background-color: map-get($child-colors, 0);
   }
   .child-bg-level-1 {
      background-color: map-get($child-colors, 1);
   }
   .child-bg-level-2 {
      background-color: map-get($child-colors, 2);
   }
   .child-bg-level-3 {
      background-color: map-get($child-colors, 3);
   }
   .child-bg-level-4 {
      background-color: map-get($child-colors, 4);
   }
   .child-bg-level-5 {
      background-color: map-get($child-colors, 5);
   }
   .child-bg-level-6 {
      background-color: map-get($child-colors, 6);
   }

   .child-packed-bg-level-0 {
      background-color: map-get($packed-colors, 0);
   }
   .child-packed-bg-level-1 {
      background-color: map-get($packed-colors, 1);
   }
   .child-packed-bg-level-2 {
      background-color: map-get($packed-colors, 2);
   }
   .child-packed-bg-level-3 {
      background-color: map-get($packed-colors, 3);
   }
   .child-packed-bg-level-4 {
      background-color: map-get($packed-colors, 4);
   }
   .child-packed-bg-level-5 {
      background-color: map-get($packed-colors, 5);
   }
   .child-packed-bg-level-6 {
      background-color: map-get($packed-colors, 6);
   }

   .item-icon-colors {
      // width: 1em;
      align-self: center;

      .parent-item {
         fill: $dark-text-color;
      }
      .this-item {
         fill: $light-text-color;
      }
      .child-item {
         fill: $dark-text-color;
      }
   }

   input {
      background-color: rgba(255, 255, 255, 0.6);
      color: black !important;
   }

   .modal-content {
      background-color: lightgray;
   }
}

// light mode
.ui-theme-2 {
   color: $dark-text-color;

   .primary-action-button {
      background-color: #404040;
      color: white;
      border: 2px solid #404040;
   }
   .primary-action-button:hover:not(.disabled) {
      color: darken(white, 10);
      background-color: darken(#404040, 10);
      border: 2px solid darken(#404040, 10);
   }
   .primary-action-button:active:not(.disabled) {
      color: darken(white, 20);
      background-color: darken(#404040, 20);
      border: 2px solid darken(#404040, 20);
   }

   .secondary-action-button {
      color: $dark-text-color;
      border: 2px solid $dark-text-color;
   }
   .secondary-action-button:hover:not(.disabled) {
      color: darken($dark-text-color, 10);
      background-color: rgba(0, 0, 0, 0.125);
      border: 2px solid darken($dark-text-color, 10);
   }
   .secondary-action-button:active:not(.disabled) {
      color: darken($dark-text-color, 20);
      background-color: rgba(0, 0, 0, 0.25);
      border: 2px solid darken($dark-text-color, 20);
   }

   .this-bg {
      background-color: $this-bg-light;
   }

   .parent-bg {
      background-color: $parent-bg-light;
   }

   .child-bg {
      background-color: $child-bg-light;
   }
   .child-packed-bg {
      background-color: $child-bg-light-packed;
   }

   .theme-icon-color {
      // width: 1em; //$iconWidth;
      align-self: center;
      .primary {
         fill: $dark-text-color;
      }
      .secondary {
         fill: $dark-text-color-dim;
      }
   }

   .edit-name {
      background-color: rgba(255, 255, 255, 0.6);
   }

   .secondary-action-button {
      color: $dark-text-color;
   }
}

// dark mode
$border-darken-amount: 5;
.ui-theme-1 {
   color: $light-text-color; // main font color for this theme

   .primary-action-button {
      color: $dark-text-color;
      background-color: $light-text-color;
   }
   .primary-action-button:hover:not(.disabled) {
      color: darken($dark-text-color, 20);
      background-color: darken($light-text-color, 20);
   }
   .primary-action-button:active:not(.disabled) {
      color: darken($dark-text-color, 40);
      background-color: darken($light-text-color, 40);
   }

   .secondary-action-button {
      color: $light-text-color;
      border: 2px solid $light-text-color;
   }
   .secondary-action-button:hover:not(.disabled) {
      color: darken($light-text-color, 10);
      background-color: rgba(0, 0, 0, 0.125);
      border: 2px solid darken($light-text-color, 10);
   }
   .secondary-action-button:active:not(.disabled) {
      color: darken($light-text-color, 20);
      background-color: rgba(0, 0, 0, 0.25);
      border: 2px solid darken($light-text-color, 20);
   }

   .this-bg {
      background-color: $this-bg-dark;
   }

   .parent-bg {
      background-color: $parent-bg-dark;
   }

   .child-bg {
      background-color: $child-bg-dark;
   }
   .child-packed-bg {
      background-color: $child-bg-dark-packed;
   }

   .display-switch-label {
      color: rgba(255, 255, 255, 0.5);
   }

   .theme-icon-color {
      // width: 1em; //$iconWidth;
      align-self: center;
      .primary {
         fill: $light-text-color;
      }
      .secondary {
         fill: $light-text-color-dim;
      }
   }

   input {
      // background-color: rgba(0, 0, 0, 0.6);
      background-color: rgba(0, 0, 0, 0.6);
   }

   .item-card-group {
      border: 2px solid #448424;
   }

   .card-header {
      border-bottom: 1px solid #448424;
   }

   .item-card-border-0 {
      border: 2px solid
         darken(map-get($level-text-colors, 0), $border-darken-amount);
   }
   .item-card-border-1 {
      border: 2px solid
         darken(map-get($level-text-colors, 1), $border-darken-amount);
   }
   .item-card-border-2 {
      border: 2px solid
         darken(map-get($level-text-colors, 2), $border-darken-amount);
   }
   .item-card-border-3 {
      border: 2px solid
         darken(map-get($level-text-colors, 3), $border-darken-amount);
   }
   .item-card-border-4 {
      border: 2px solid
         darken(map-get($level-text-colors, 4), $border-darken-amount);
   }
   .item-card-border-5 {
      border: 2px solid
         darken(map-get($level-text-colors, 5), $border-darken-amount);
   }
   .item-card-border-6 {
      border: 2px solid
         darken(map-get($level-text-colors, 6), $border-darken-amount);
   }

   .modal-content {
      background-color: black;
   }
}

// shared with light and dark themes
.ui-theme-2,
.ui-theme-1 {
   .item-icon-colors-0 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 6);
      }
      .this-item {
         fill: map-get($level-text-colors, 0);
      }
      .child-item {
         fill: map-get($level-text-colors, 1);
      }
   }
   .item-icon-colors-1 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 0);
      }
      .this-item {
         fill: map-get($level-text-colors, 1);
      }
      .child-item {
         fill: map-get($level-text-colors, 2);
      }
   }
   .item-icon-colors-2 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 1);
      }
      .this-item {
         fill: map-get($level-text-colors, 2);
      }
      .child-item {
         fill: map-get($level-text-colors, 3);
      }
   }
   .item-icon-colors-3 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 2);
      }
      .this-item {
         fill: map-get($level-text-colors, 3);
      }
      .child-item {
         fill: map-get($level-text-colors, 4);
      }
   }
   .item-icon-colors-4 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 3);
      }
      .this-item {
         fill: map-get($level-text-colors, 4);
      }
      .child-item {
         fill: map-get($level-text-colors, 5);
      }
   }
   .item-icon-colors-5 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 4);
      }
      .this-item {
         fill: map-get($level-text-colors, 5);
      }
      .child-item {
         fill: map-get($level-text-colors, 6);
      }
   }
   .item-icon-colors-6 {
      // width: 1em;
      align-self: center;
      // colors for the packing icons
      .parent-item {
         fill: map-get($level-text-colors, 5);
      }
      .this-item {
         fill: map-get($level-text-colors, 6);
      }
      .child-item {
         fill: map-get($level-text-colors, 0);
      }
   }
}

// shared between colors and light themes
.ui-theme-0,
.ui-theme-2 {
   .display-switch-label {
      color: rgba(0, 0, 0, 0.5);
   }
}
